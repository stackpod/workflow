"$schema": https://json-schema.org/draft/2020-12/schema
$id: https://stackpod.io/workflows/schema/workflow
title: Workflows
description: Workflows to define business actions
type: object
properties:
  workflows:
    description: List of defined workflows
    type: array
    items:
      type: object
      properties:
        name:
          description: Name of the workflow
          type: string
          minLength: 5
          maxLength: 255
          pattern: "^[A-Za-z0-9][A-Za-z0-9 -_.]+$"
        description:
          description: Description of the workflow
          type: string
        actions:
          $ref: "#/$defs/actions"
      required:
      - name
      - actions
required:
  - workflows
additionalProperties: false
$defs:
  actions:
    type: array
    minItems: 1
    items:
      type: object
      unevaluatedProperties: false
      properties:
        name:
          description: Name of this specific action. Optional.
          type: string
      required: [ "name" ]
      oneOf:
      - type: object
        properties:
          setvars: { "type": "object" }
        required: [ "setvars" ]
      - type: object
        properties:
          setstate: { "type": "object" }
        required: [ "setstate" ]
      - type: object
        properties:
          setloopvars: { "type": "object" }
        required: [ "setloopvars" ]
      - type: object
        properties:
          workflow: { "type": "string" }
          args: { "type": "object" }
          store: { "type": "string" }
          timeout: { "type": "number" }
        required: [ "workflow" ]
      - type: object
        properties:
          conditionals:
            type: array
            minItems: 1
            items:
              type: object
              properties:
                condition:
                  anyOf:
                  - type: object
                  - type: string
                actions:
                  $ref: "#/$defs/actions"
                strict:
                  type: boolean
              required: [ "actions" ]
        required: [ "conditionals" ]
      - type: object
        properties:
          error: { "type": "object" }
        required: [ "error" ]
      - type: object
        properties:
          alt: { "type": "object" }
        required: [ "alt" ]
      - type: object
        properties:
          end: { "type": "object" }
        required: [ "end" ]
      - type: object
        properties:
          abort: { "type": "object" }
        required: [ "abort" ]
      - type: object
        properties:
          sleep: { "type": "number" }
        required: [ "sleep" ]
      - type: object
        properties:
          python: { "type": "object" }
          args: { "type": "object" }
          store: { "type": "string" }
          timeout: { "type": "number" }
        required: [ "python" ]
      - type: object
        properties:
          js: { "type": "object" }
          args: { "type": "object" }
          store: { "type": "string" }
          timeout: { "type": "number" }
        required: [ "js" ]
      - type: object
        properties:
          traverse: { "type": "object" }
          args: { "type": "object" }
          store: { "type": "string" }
          timeout: { "type": "number" }
        required: [ "traverse" ]
      - type: object
        properties:
          assert: { "type": "object" }
        required: [ "assert" ]
      - type: object
        properties:
          return:
            anyOf:
            - type: object
            - type: string
        required: [ "return" ]
